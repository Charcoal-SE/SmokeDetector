name: build

on:
  push:
    branches-ignore:
      - deploy
  pull_request:
    branches-ignore:
      - deploy

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - '3.6'
          - '3.10'
    steps:
    - uses: actions/checkout@v3
    - name: Fetch branches
      run: |
        git remote set-branches --add origin deploy
        git fetch --depth=5 origin master deploy
    - uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Setup cache
      id: cache
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-${{ matrix.python-version }}-pip-2-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.python-version }}-pip-2-${{ hashFiles('**/requirements.txt') }}
          ${{ runner.os }}-${{ matrix.python-version }}-pip-2-
        path: |
          ~/.cache/pip
          env
    - name: Install dependencies
      run: |
        # Invalidate cached env if it is linked to a nonexistent binary
        ./env/bin/python3 --version || rm -rf ./env
        python3 -m venv env
        source env/bin/activate
        env/bin/pip3 install -U wheel
        env/bin/pip3 install -U -r requirements.txt -r user_requirements.txt pytest-cov coveralls
    - name: Lint tests
      run: env/bin/python3 -m flake8 --config=tox_tests.ini ./test/
    - name: Lint classes
      run: env/bin/python3 -m flake8 --config=tox_classes.ini ./classes/
    - name: Lint code
      run: env/bin/python3 -m flake8 ./
    - name: Pytest
      run: |
        env/bin/python3 -W default::Warning -m pytest \
          --cov=chatcommunicate \
          --cov=findspam \
          --cov=globalvars \
          --cov=spamhandling \
          --cov=datahandling \
          --cov=chatcommands \
          --cov=helpers \
          -n 3 \
          --dist loadgroup \
          test
